{"version":3,"sources":["contact-form/ContactForm.jsx","contact-filter/Filter.jsx","contact-list/Contact.jsx","contact-list/ContactList.jsx","App.js","index.js","contact-list/ContactList.module.css"],"names":["ContactForm","onCreateHandler","contacts","useState","name","number","state","setState","id","onSubmit","e","preventDefault","value","onChange","prev","target","type","pattern","title","required","onClick","contact","nanoid","found","find","item","toLowerCase","alert","Filter","onChangeHandler","Contact","idx","deleteHandler","className","styles","ContactList","contactList","length","map","i","key","App","filter","useEffect","localStorage","getItem","parseContacts","JSON","parse","setItem","stringify","includes","newArray","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.fe69eeb1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactForm = ({ onCreateHandler, contacts }) => {\r\n  const [state, setState] = useState({\r\n    name: \"\",\r\n    number: \"\",\r\n  });\r\n\r\n  const submitHandler = () => {\r\n    const contact = { ...state };\r\n    contact.id = nanoid();\r\n\r\n    const found = contacts.find((item) => item.name.toLowerCase() === contact.name.toLowerCase());\r\n    if (found) {\r\n      return alert(`${found.name} is already in contacts.`);\r\n    }\r\n    if (state.name && state.number) {\r\n      setState({ name: \"\", number: \"\" });\r\n      onCreateHandler(contact);\r\n    } else {\r\n      return alert(\"Enter name and number!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form id=\"contact-creation-form\" onSubmit={(e) => e.preventDefault()}>\r\n      <label>\r\n        Name\r\n        <input\r\n          value={state.name}\r\n          onChange={(e) => setState((prev) => ({ ...prev, name: e.target.value }))}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Number\r\n        <input\r\n          value={state.number}\r\n          onChange={(e) => setState((prev) => ({ ...prev, number: e.target.value }))}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button onClick={submitHandler}>Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nContactForm.propTypes = {\r\n  onCreateHandler: PropTypes.func.isRequired,\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChangeHandler }) => {\r\n  return (\r\n    <div>\r\n      <label>\r\n        Find contacts by name\r\n        <input type=\"text\" name=\"filter\" value={value} onChange={onChangeHandler} />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = { value: PropTypes.string, onChangeHandler: PropTypes.func.isRequired };\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst Contact = ({ id, idx, name, number, deleteHandler }) => {\r\n  return (\r\n    <li className={styles.contact}>\r\n      {idx + 1}. {name}: {number}\r\n      <button onClick={() => deleteHandler(id)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContact.propTypes = {\r\n  id: PropTypes.string,\r\n  idx: PropTypes.number,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  deleteHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Contact from \"./Contact\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, deleteHandler }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.contactList}>\r\n        {contacts && contacts.length ? (\r\n          contacts.map((contact, i) => {\r\n            const { id, name, number } = contact;\r\n\r\n            return (\r\n              <Contact\r\n                key={id}\r\n                id={id}\r\n                idx={i}\r\n                name={name}\r\n                number={number}\r\n                deleteHandler={deleteHandler}\r\n              />\r\n            );\r\n          })\r\n        ) : (\r\n          <p>Contacts not found!</p>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.object),\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { useState, useEffect } from \"react\";\n\nimport ContactForm from \"./contact-form/ContactForm\";\nimport Filter from \"./contact-filter/Filter\";\nimport ContactList from \"./contact-list/ContactList\";\n\nfunction App() {\n  const [state, setState] = useState({\n    contacts: [],\n    filter: \"\",\n  });\n\n  useEffect(() => {\n    const contacts = localStorage.getItem(\"contacts\");\n    const parseContacts = contacts ? JSON.parse(contacts) : null;\n\n    if (parseContacts) {\n      setState((state) => ({ ...state, contacts: [...parseContacts] }));\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(state.contacts));\n  }, [state.contacts]);\n\n  const filteredContacts = () => {\n    return state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(state.filter.toLowerCase())\n    );\n  };\n\n  const contactCreationHandler = (contact) => {\n    setState((prev) => ({ ...prev, contacts: [...prev.contacts, contact] }));\n  };\n\n  const filterChangeHandler = (e) => {\n    setState((prev) => ({ ...prev, filter: e.target.value }));\n  };\n\n  const deleteContactHandler = (id) => {\n    const newArray = state.contacts.filter((contact) => contact.id !== id);\n    setState((prev) => ({ ...prev, contacts: [...newArray] }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onCreateHandler={contactCreationHandler} contacts={state.contacts} />\n\n      <h2>Contacts</h2>\n      <Filter value={state.filter} onChangeHandler={filterChangeHandler} />\n      <ContactList contacts={filteredContacts()} deleteHandler={deleteContactHandler} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__aqknG\",\"contact\":\"ContactList_contact__200RK\"};"],"sourceRoot":""}